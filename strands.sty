\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{strands}[2021/04/04 Strands v1.0]

% packages:
\RequirePackage{tikz}
\RequirePackage{xfp}
\RequirePackage{xstring}
\RequirePackage{xkeyval}

\usetikzlibrary{snakes}

\newcommand{\getelem}[3]{ % \getelem{list}{num}{\name} % get the "num"th element from "list" to "\name".
	\StrBetween[#2,\fpeval{#2+1}]{,#1,}{,}{,}[#3]
}

% global variables:
\makeatletter
\define@cmdkey[str]{strands}{bending}{}
\define@cmdkey[str]{strands}{bulletsize}{}
\define@cmdkey[str]{strands}{curve}{}
\define@cmdkey[str]{strands}{height}{}
\define@cmdkey[str]{strands}{norma}{}
\define@cmdkey[str]{strands}{normb}{}
\define@cmdkey[str]{strands}{normcolor}{}
\define@cmdkey[str]{strands}{normsymbol}{}
\define@cmdkey[str]{strands}{nstr}{}
\define@cmdkey[str]{strands}{num}{}
\define@cmdkey[str]{strands}{rotate}{}
\define@cmdkey[str]{strands}{scale}{}
\define@cmdkey[str]{strands}{strwidth}{}
\define@cmdkey[str]{strands}{tiebend}{}
\define@cmdkey[str]{strands}{tiecolor}{}
\define@cmdkey[str]{strands}{tieheight}{}
\define@cmdkey[str]{strands}{tietype}{}
\define@cmdkey[str]{strands}{tiewidth}{}
\define@cmdkey[str]{strands}{width}{}

% default options:
\presetkeys[str]{strands}{
	bending=right, % left or right curvature of tangles.
	bulletsize=0.5mm,
	curve=45,
	height=1, % to set the height of strands.
	norma=0, % to normalize the height above.
	normb=0, % to normalize the height below.
	normcolor=transparent,
	normsymbol=-,
	nstr=0, % number of strands.
	num=0, % number of dots for arc partitions.
	rotate=0, % to rotate all pictures.
	scale=1, % to scale all pictures.
	strwidth=0.7, % to set the width of the strands.
	tiebend=0, % to set bending of ties.
	tiecolor=red, % to set color of the ties.
	tieheight=0.5, % height of ties respect to the global height.
	tietype=dashed, % to set the type of the tie lines.
	tiewidth=0.5, % to set the width of tie lines.
	width=0.6, % to set the width between strands.
}{}

\setkeys[str]{strands}{}

% declare custom options:
\DeclareOptionX{bending}{\renewcommand{\cmdstr@strands@bending}{#1}}
\DeclareOptionX{bulletsize}{\renewcommand{\cmdstr@strands@bulletsize}{#1}}
\DeclareOptionX{curve}{\renewcommand{\cmdstr@strands@curve}{#1}}
\DeclareOptionX{height}{\renewcommand{\cmdstr@strands@height}{#1}}
\DeclareOptionX{norma}{\renewcommand{\cmdstr@strands@norma}{#1}}
\DeclareOptionX{normb}{\renewcommand{\cmdstr@strands@normb}{#1}}
\DeclareOptionX{normcolor}{\renewcommand{\cmdstr@strands@normcolor}{#1}}
\DeclareOptionX{nstr}{\renewcommand{\cmdstr@strands@nstr}{#1}}
\DeclareOptionX{num}{\renewcommand{\cmdstr@strands@num}{#1}}
\DeclareOptionX{rotate}{\renewcommand{\cmdstr@strands@rotate}{#1}}
\DeclareOptionX{scale}{\renewcommand{\cmdstr@strands@scale}{#1}}
\DeclareOptionX{strwidth}{\renewcommand{\cmdstr@strands@strwidth}{#1}}
\DeclareOptionX{tiebend}{\renewcommand{\cmdstr@strands@tiebend}{#1}}
\DeclareOptionX{tiecolor}{\renewcommand{\cmdstr@strands@tiecolor}{#1}}
\DeclareOptionX{tietype}{\renewcommand{\cmdstr@strands@tietype}{#1}}
\DeclareOptionX{tiewidth}{\renewcommand{\cmdstr@strands@tiewidth}{#1}}
\DeclareOptionX{width}{\renewcommand{\cmdstr@strands@width}{#1}}
\DeclareOptionX*{\PackageWarning{strands}{`\CurrentOption' ignored}} % ignore unknown options.
\ProcessOptionsX\relax

% \vvpartition  - macro to draw set partitions in the partition monoid (with tikz environment).

% Example: the set partition {1,2}{3,-4}{4,-3} of [2*4] is drawn as follows: 

% \begin{tikzpicture} \vvpartition[<options>]{{1,2},{3,-4},{4,-3}} \end{\tikzpicture}

%  1   2   3   4
%  |   |   |   |
%  -----    - -
%            -
%           - -
%          |   |
%  5   6   7   8

\makeatletter
\define@cmdkey[str]{vvpart}{bending}{}
\define@cmdkey[str]{vvpart}{bulla}{}
\define@cmdkey[str]{vvpart}{bullb}{}
\define@cmdkey[str]{vvpart}{floor}{}
\define@cmdkey[str]{vvpart}{font}{}
\define@cmdkey[str]{vvpart}{height}{}
\define@cmdkey[str]{vvpart}{negt}{}
\define@cmdkey[str]{vvpart}{norma}{}
\define@cmdkey[str]{vvpart}{normb}{}
\define@cmdkey[str]{vvpart}{nstr}{}
\define@cmdkey[str]{vvpart}{permut}{}
\define@cmdkey[str]{vvpart}{strwidth}{}
\define@cmdkey[str]{vvpart}{type}{}
\define@cmdkey[str]{vvpart}{width}{}

\presetkeys[str]{vvpart}{
	bending=\cmdstr@strands@bending, % use left or right to change the bending of the tangles.
	bulla=1, % use 1 to draw bullets above, otherwise 0.
	bullb=1, % use 1 to draw bullets below, otherwise 0.
	floor=0, % the picture starts at floor*height.
	font=\tiny, % size of font for labels (does it work?).
	height=\cmdstr@strands@height, % height of the strands.
	negt=0, % use 1 to reflect the connections vertically (to use with \aarcpartition).
	norma=\cmdstr@strands@norma, % point above to normalize height.
	normb=\cmdstr@strands@normb, % point below to normalize height.
	nstr=\cmdstr@strands@nstr, % number of strands.
	permut=0, % use 1 to draw permutations (to use with \ppermutation).
	strwidth=\cmdstr@strands@strwidth, % set the width of the strands.
	type=3, % -1: labels below | 0: no labels | 1: labels above | 2: labels above-below in [n]-[n] | 3: labels above-below in [2n] | 4: labels above-below in [n]-[n'] | 5: labels above-below in [-n/2]-[n/2] (n must be even).
	width=\cmdstr@strands@width % width between strands.
}{}

\newcommand{\vvpartition}[2][
	bending=\cmdstr@strands@bending,
	bulla=1,
	bullb=1,
	floor=0,
	font=\tiny,
	height=\cmdstr@strands@height,
	negt=0,
	norma=\cmdstr@strands@norma,
	normb=\cmdstr@strands@normb,
	nstr=\cmdstr@strands@nstr,
	permut=0,
	strwidth=\cmdstr@strands@strwidth,
	type=3,
	width=\cmdstr@strands@width
]{
	\setkeys[str]{vvpart}{#1}
	\node[\cmdstr@strands@normcolor]at(0,\cmdstr@vvpart@norma){\cmdstr@strands@normsymbol};
	\node[\cmdstr@strands@normcolor]at(0,\cmdstr@vvpart@normb){\cmdstr@strands@normsymbol};
	\StrRemoveBraces{#2}[\nobracespart] % remove braces.
	\let\oldnumstrands\cmdstr@vvpart@nstr
	\renewcommand{\cmdstr@vvpart@nstr} % compute number of strands.
	{\fpeval{max(abs(min(\nobracespart)),abs(max(\nobracespart)),\fpeval{abs(\oldnumstrands)})}}
	\foreach\ind in{0,...,\fpeval{\cmdstr@vvpart@nstr-1}}{ % to draw bullets and their labels.
		\ifnum \cmdstr@vvpart@bulla=1 % to draw bullets above.
			\filldraw(\fpeval{\ind*\cmdstr@vvpart@width},
			\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height+\cmdstr@vvpart@height})
			circle(\cmdstr@strands@bulletsize);
		\fi
		\ifnum \cmdstr@vvpart@bullb=1 % to draw bullets below.
			\filldraw(\fpeval{\ind*\cmdstr@vvpart@width},
			\cmdstr@vvpart@floor*\cmdstr@vvpart@height)circle(\cmdstr@strands@bulletsize);
		\fi
		\ifnum \cmdstr@vvpart@type<5; % to label classic bullets.
			\ifnum \cmdstr@vvpart@type=-1 % to label bullets below from 1 to n.
				\node[font=\cmdstr@vvpart@font]at
					(\fpeval{\ind*\cmdstr@vvpart@width},
					\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height-0.2})
					{$\fpeval{\ind+1}$};
			\fi
			\ifnum \cmdstr@vvpart@type>0 % to label bullets above from 1 to n.
				\node[font=\cmdstr@vvpart@font]at
					(\fpeval{\ind*\cmdstr@vvpart@width},
					\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height+\cmdstr@vvpart@height+0.2})
					{$\fpeval{\ind+1}$};
			\fi
			\ifnum \cmdstr@vvpart@type=2 % to label bullets below from 1 to n.
				\node[font=\cmdstr@vvpart@font]at
					(\fpeval{\ind*\cmdstr@vvpart@width},
					\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height-0.2})
					{$\fpeval{\ind+1}$};
			\fi
			\ifnum \cmdstr@vvpart@type=3 % to label bullets below from n+1 to 2n.
				\node[font=\cmdstr@vvpart@font]at
					(\fpeval{\ind*\cmdstr@vvpart@width},
					\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height-0.2})
					{$\fpeval{\ind+\cmdstr@vvpart@nstr+1}$};
			\fi
			\ifnum \cmdstr@vvpart@type=4 % to label bullets below from 1' to n'.
				\node[font=\cmdstr@vvpart@font]at
					(\fpeval{\ind*\cmdstr@vvpart@width},
					\fpeval{\cmdstr@vvpart@floor*height-0.2})
					{$\fpeval{\ind+1}'$};
			\fi
		\fi
		\ifnum \cmdstr@vvpart@type=5 % to label signed partitions from -n/2 to n/2 (n must be even).
			\ifnum\ind<\fpeval{\cmdstr@vvpart@nstr/2}
				\node[font=\cmdstr@vvpart@font]at
					(\fpeval{(\ind+\cmdstr@vvpart@nstr/2)*\cmdstr@vvpart@width},
					\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height+\cmdstr@vvpart@height+0.2})
					{$\fpeval{\ind+1}$};
				\node[font=\cmdstr@vvpart@font]at
					(\fpeval{\ind*\cmdstr@vvpart@width-0.03},
					\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height+\cmdstr@vvpart@height+0.2})
					{-$\fpeval{\cmdstr@vvpart@nstr/2-\ind}$};
				\node[font=\cmdstr@vvpart@font]at
					(\fpeval{(\ind+\cmdstr@vvpart@nstr/2)*\cmdstr@vvpart@width},
					\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height-0.2})
					{$\fpeval{\ind+\cmdstr@vvpart@nstr/2+1}$};
				\node[font=\cmdstr@vvpart@font]at
					(\fpeval{\ind*\cmdstr@vvpart@width-0.03},
					\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height-0.2})
					{-$\fpeval{\cmdstr@vvpart@nstr-\ind}$};
			\fi
		\fi
		\ifnum\cmdstr@vvpart@permut=1 % draw connection of a permutation.
			\getelem{#2}{\fpeval{\ind+1}}{\index} 
			\draw[line width=\cmdstr@vvpart@strwidth](\fpeval{\ind*\cmdstr@vvpart@width},
			\fpeval{\cmdstr@vvpart@height+\cmdstr@vvpart@floor*\cmdstr@vvpart@height})to
			(\fpeval{(\ifnum\fpeval{\index+0}>0 \index\else\fpeval{\ind+1}\fi-1)*
			\cmdstr@vvpart@width},\cmdstr@vvpart@floor*\cmdstr@vvpart@height);
		\fi
	}
	\ifnum\cmdstr@vvpart@permut=0 \foreach\block in{#2}{ % to draw connections.
		\StrCount{\block}{,}[\numcom] % number of commas.
		\ifnum\numcom>0\foreach\ind in {2,...,\fpeval{\numcom+1}}{
			\getelem{\block}{\fpeval{\ind-1}}{\firbul}
			\getelem{\block}{\ind}{\secbul}
			\ifnum \cmdstr@vvpart@negt=1 % to reflect the connections vertically.
				\let\oldfirbul\firbul
				\renewcommand{\firbul}{-\oldfirbul}
				\let\oldsecbul\secbul
				\renewcommand{\secbul}{-\oldsecbul}
			\fi
			\draw[line width=\cmdstr@vvpart@strwidth]
				(\fpeval{(abs(\firbul)-1)*\cmdstr@vvpart@width},\ifnum\firbul>0 
				\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height+\cmdstr@vvpart@height}
				\else\cmdstr@vvpart@floor*\cmdstr@vvpart@height
			\fi)to[
				bend \cmdstr@vvpart@bending=\ifnum \fpeval{\firbul*\secbul}>0
				\fpeval{(\firbul/abs(\firbul))*((abs(\secbul)-abs(\firbul))/
				abs(abs(\secbul)-abs(\firbul)))*\cmdstr@strands@curve}\else0\fi
			](\fpeval{(abs(\secbul)-1)*\cmdstr@vvpart@width},\ifnum\secbul>0
				\fpeval{\cmdstr@vvpart@floor*\cmdstr@vvpart@height+\cmdstr@vvpart@height}
				\else\cmdstr@vvpart@floor*\cmdstr@vvpart@height
			\fi);
		}\fi
	}\fi
}

% \vpartition  - macro to draw set partitions in the partition monoid (with no tikz environment).

% Example: the set partition {1,2}{3,-4}{4,-3} of [2*4] is drawn as follows: 

% \vvpartition[<options>]{{1,2},{3,-4},{4,-3}}

%  1   2   3   4
%  |   |   |   |
%  -----    - -
%            -
%           - -
%          |   |
%  5   6   7   8

\makeatletter
\define@cmdkey[str]{vpart}{bending}{}
\define@cmdkey[str]{vpart}{bulla}{}
\define@cmdkey[str]{vpart}{bullb}{}
\define@cmdkey[str]{vpart}{floor}{}
\define@cmdkey[str]{vpart}{font}{}
\define@cmdkey[str]{vpart}{height}{}
\define@cmdkey[str]{vpart}{negt}{}
\define@cmdkey[str]{vpart}{norma}{}
\define@cmdkey[str]{vpart}{normb}{}
\define@cmdkey[str]{vpart}{scale}{}
\define@cmdkey[str]{vpart}{nstr}{}
\define@cmdkey[str]{vpart}{permut}{}
\define@cmdkey[str]{vpart}{rotate}{}
\define@cmdkey[str]{vpart}{strwidth}{}
\define@cmdkey[str]{vpart}{type}{}
\define@cmdkey[str]{vpart}{width}{}

\presetkeys[str]{vpart}{
	bending=\cmdstr@strands@bending, % use left or right to change the bending of the tangles.
	bulla=1, % use 1 to draw bullets above, otherwise 0.
	bullb=1, % use 1 to draw bullets below, otherwise 0.
	floor=0, % the picture starts at floor*height.
	font=\tiny, % size of font for labels (does it work?).
	height=\cmdstr@strands@height, % height of the strands.
	negt=0, % use 1 to reflect the connections vertically (to use with \arcpartition).
	norma=\cmdstr@strands@norma, % point above to normalize height.
	normb=\cmdstr@strands@normb, % point below to normalize height.
	nstr=\cmdstr@strands@nstr, % number of strands.
	permut=0, % use 1 to draw permutations (to use with \permutation).
	rotate=\cmdstr@strands@rotate, % to rotate the picture.
	scale=\cmdstr@strands@scale, % positive number to scale the picture (do not work for labels).
	strwidth=\cmdstr@strands@strwidth, % set the width of the strands.
	type=3, % -1: labels below | 0: no labels | 1: labels above | 2: labels above-below in [n]-[n] | 3: labels above-below in [2n] | 4: labels above-below in [n]-[n'] | 5: labels above-below in [-n/2]-[n/2] (n must be even).
	width=\cmdstr@strands@width % width between strands.
}{}

\newcommand{\vpartition}[2][
	bending=\cmdstr@strands@bending,
	bulla=1,
	bullb=1,
	floor=0,
	font=\tiny,
	height=\cmdstr@strands@height,
	negt=0,
	norma=\cmdstr@strands@norma,
	normb=\cmdstr@strands@normb,
	nstr=\cmdstr@strands@nstr,
	permut=0,
	rotate=\cmdstr@strands@rotate,
	scale=\cmdstr@strands@scale,
	strwidth=\cmdstr@strands@strwidth,
	type=3,
	width=\cmdstr@strands@width
]{
	\setkeys[str]{vpart}{#1}
	\begin{tikzpicture}[
		rotate=\cmdstr@vpart@rotate,
		scale=\cmdstr@vpart@scale
	]
		\vvpartition[
			bending=\cmdstr@vpart@bending,
			bulla=\cmdstr@vpart@bulla,
			bullb=\cmdstr@vpart@bullb,
			floor=\cmdstr@vpart@floor,
			font=\cmdstr@vpart@font,
			height=\cmdstr@vpart@height,
			negt=\cmdstr@vpart@negt,
			norma=\cmdstr@vpart@norma,
			normb=\cmdstr@vpart@normb,
			nstr=\cmdstr@vpart@nstr,
			permut=\cmdstr@vpart@permut,
			strwidth=\cmdstr@vpart@strwidth,
			type=\cmdstr@vpart@type,
			width=\cmdstr@vpart@width
		]{#2}
	\end{tikzpicture}
}

% \aarcpartition  - macro to draw set partitions via arcs (with tikz environment).

% Example: the set partition {1,4}{2,3,7} of [7] is drawn as follows: 

% \begin{tikzpicture} \aarcpartition[<options>]{{1,4},{2,3,7}} \end{tikzpicture}

%          -----------------
%          |               |
%  -------------           |
%  |       |   |           |
%  |   -----   |           |
%  |   |   |   |           |
%  1   2   3   4   5   6   7

\makeatletter
\define@cmdkey[str]{aapart}{bending}{}
\define@cmdkey[str]{aapart}{bull}{}
\define@cmdkey[str]{aapart}{floor}{}
\define@cmdkey[str]{aapart}{font}{}
\define@cmdkey[str]{aapart}{norma}{}
\define@cmdkey[str]{aapart}{normb}{}
\define@cmdkey[str]{aapart}{num}{}
\define@cmdkey[str]{aapart}{strwidth}{}
\define@cmdkey[str]{aapart}{type}{}
\define@cmdkey[str]{aapart}{width}{}

\presetkeys[str]{aapart}{
	bending=\cmdstr@strands@bending, % use left or right to change the bending of tangles.
	bull=1, % use 1 to draw bullets, otherwise 0.
	floor=0, % the picture starts at floor.
	font=\tiny, % size of font for labels (does it work?).
	norma=\cmdstr@strands@norma, % point above to normalize height.
	normb=\cmdstr@strands@normb, % point below to normalize height.
	num=\cmdstr@strands@num, % number of dots.
	strwidth=\cmdstr@strands@strwidth, % set the width of the strands.
	type=1, % 0 with no labels | 1 with labels below.
	width=\cmdstr@strands@width % width between dots.
}{}

\newcommand{\aarcpartition}[2][
	bending=\cmdstr@strands@bending,
	bull=1,
	floor=0,
	font=\tiny,
	norma=\cmdstr@strands@norma,
	normb=\cmdstr@strands@normb,
	num=\cmdstr@strands@num,
	strwidth=\cmdstr@strands@strwidth,
	type=1,
	width=\cmdstr@strands@width
]{
	\setkeys[str]{aapart}{#1}
	\vvpartition[
		bending=\cmdstr@aapart@bending,
		bulla=0, % no bullets above.
		bullb=\cmdstr@aapart@bull,
		floor=\cmdstr@aapart@floor,
		font=\cmdstr@aapart@font,
		negt=1, % put connections below.
		norma=\cmdstr@aapart@norma,
		normb=\cmdstr@aapart@normb,
		nstr=\cmdstr@aapart@num,
		strwidth=\cmdstr@aapart@strwidth,
		type=-\cmdstr@aapart@type,
		width=\cmdstr@aapart@width
	]{#2}
}

% \arcpartition  - macro to draw set partitions via arcs (with no tikz environment).

% Example: the set partition {1,4}{2,3,7} of [7] is drawn as follows: 

% \arcpartition[<options>]{{1,4},{2,3,7}}

%          -----------------
%          |               |
%  -------------           |
%  |       |   |           |
%  |   -----   |           |
%  |   |   |   |           |
%  1   2   3   4   5   6   7

\makeatletter
\define@cmdkey[str]{apart}{bending}{}
\define@cmdkey[str]{apart}{bull}{}
\define@cmdkey[str]{apart}{floor}{}
\define@cmdkey[str]{apart}{font}{}
\define@cmdkey[str]{apart}{norma}{}
\define@cmdkey[str]{apart}{normb}{}
\define@cmdkey[str]{apart}{num}{}
\define@cmdkey[str]{apart}{rotate}{}
\define@cmdkey[str]{apart}{scale}{}
\define@cmdkey[str]{apart}{strwidth}{}
\define@cmdkey[str]{apart}{type}{}
\define@cmdkey[str]{apart}{width}{}

\presetkeys[str]{apart}{
	bending=\cmdstr@strands@bending, % use left or right to change the bending of tangles.
	bull=1, % use 1 to draw bullets, otherwise 0.
	floor=0, % the picture starts at floor.
	font=\tiny, % size of font for labels (does it work?).
	norma=\cmdstr@strands@norma, % point above to normalize height.
	normb=\cmdstr@strands@normb, % point below to normalize height.
	num=\cmdstr@strands@num, % number of dots.
	rotate=\cmdstr@strands@rotate, % to rotate the picture.
	scale=\cmdstr@strands@scale, % positive number to scale the picture (do not work for labels).
	strwidth=\cmdstr@strands@strwidth, % set the width of the strands.
	type=1, % 0 with no labels | 1 with labels below.
	width=\cmdstr@strands@width % width between dots.
}{}

\newcommand{\arcpartition}[2][
	bending=\cmdstr@strands@bending,
	bull=1,
	floor=0,
	font=\tiny,
	norma=\cmdstr@strands@norma,
	normb=\cmdstr@strands@normb,
	num=\cmdstr@strands@num,
	rotate=\cmdstr@strands@rotate,
	scale=\cmdstr@strands@scale,
	strwidth=\cmdstr@strands@strwidth,
	type=1,
	width=\cmdstr@strands@width
]{
	\setkeys[str]{apart}{#1}
	\vpartition[
		bending=\cmdstr@apart@bending,
		bulla=0, % no bullets above.
		bullb=\cmdstr@apart@bull,
		floor=\cmdstr@apart@floor,
		font=\cmdstr@apart@font,
		negt=1, % put connections below.
		norma=\cmdstr@apart@norma,
		normb=\cmdstr@apart@normb,
		nstr=\cmdstr@apart@num,
		rotate=\cmdstr@apart@rotate,
		scale=\cmdstr@apart@scale,
		strwidth=\cmdstr@apart@strwidth,
		type=-\cmdstr@apart@type,
		width=\cmdstr@apart@width
	]{#2}
}

% \ppermutation  - macro to draw permutations by lines (with tikz environment).

% Example: the permutation 2134 of [4] is drawn as follows: 

% \begin{tikzpicture} \ppermutation[<options>]{2,1,3,4} \end{tikzpicture}

%  1   2   3   4
%  |   |   |   |
%   - -    |   |
%    -     |   |
%   - -    |   |
%  |   |   |   |
%  1   2   3   4

\makeatletter
\define@cmdkey[str]{pperm}{bulla}{}
\define@cmdkey[str]{pperm}{bullb}{}
\define@cmdkey[str]{pperm}{floor}{}
\define@cmdkey[str]{pperm}{font}{}
\define@cmdkey[str]{pperm}{height}{}
\define@cmdkey[str]{pperm}{norma}{}
\define@cmdkey[str]{pperm}{normb}{}
\define@cmdkey[str]{pperm}{nstr}{}
\define@cmdkey[str]{pperm}{strwidth}{}
\define@cmdkey[str]{pperm}{type}{}
\define@cmdkey[str]{pperm}{width}{}

\presetkeys[str]{pperm}{
	bulla=1, % use 1 to draw bullets above, otherwise 0.
	bullb=1, % use 1 to draw bullets below, otherwise 0.
	floor=0, % the picture starts at floor.
	font=\tiny, % size of font for labels (does it work?).
	height=\cmdstr@strands@height, % height of the strands.
	norma=\cmdstr@strands@norma, % point above to normalize height.
	normb=\cmdstr@strands@normb, % point below to normalize height.
	nstr=\cmdstr@strands@nstr, % number of dots.
	strwidth=\cmdstr@strands@strwidth, % set the width of the strands.
	type=2, % -1: labels below | 0: no labels | 1: labels above | 2: labels above-below | 3: labels signed.
	width=\cmdstr@strands@width % width between dots.
}{}

\newcommand{\ppermutation}[2][
	bulla=1,
	bullb=1,
	floor=0,
	font=\tiny,
	height=\cmdstr@strands@height,
	norma=\cmdstr@strands@norma,
	normb=\cmdstr@strands@normb,
	nstr=\cmdstr@strands@nstr,
	strwidth=\cmdstr@strands@strwidth,
	type=2,
	width=\cmdstr@strands@width
]{
	\setkeys[str]{pperm}{#1}
	\ifnum\cmdstr@pperm@type>2 \renewcommand{\cmdstr@pperm@type}{5}\fi % renumerate type.
	\vvpartition[
		bulla=\cmdstr@pperm@bulla,
		bullb=\cmdstr@pperm@bullb,
		floor=\cmdstr@pperm@floor,
		font=\cmdstr@pperm@font,
		height=\cmdstr@pperm@height,
		norma=\cmdstr@pperm@norma,
		normb=\cmdstr@pperm@normb,
		nstr=\cmdstr@pperm@nstr,
		permut=1, % permutation.
		strwidth=\cmdstr@pperm@strwidth,
		type=\cmdstr@pperm@type, % renumerated labels.
		width=\cmdstr@pperm@width
	]{#2}
}

% \permutation  - macro to draw permutations by lines (with no tikz environment).

% Example: the permutation 2134 of [4] is drawn as follows:

% \permutation[<options>]{2,1,3,4}

%  1   2   3   4
%  |   |   |   |
%   - -    |   |
%    -     |   |
%   - -    |   |
%  |   |   |   |
%  1   2   3   4

\makeatletter
\define@cmdkey[str]{perm}{bulla}{}
\define@cmdkey[str]{perm}{bullb}{}
\define@cmdkey[str]{perm}{floor}{}
\define@cmdkey[str]{perm}{font}{}
\define@cmdkey[str]{perm}{height}{}
\define@cmdkey[str]{perm}{norma}{}
\define@cmdkey[str]{perm}{normb}{}
\define@cmdkey[str]{perm}{nstr}{}
\define@cmdkey[str]{perm}{scale}{}
\define@cmdkey[str]{perm}{strwidth}{}
\define@cmdkey[str]{perm}{type}{}
\define@cmdkey[str]{perm}{width}{}

\presetkeys[str]{perm}{
	bulla=1, % use 1 to draw bullets above, otherwise 0.
	bullb=1, % use 1 to draw bullets below, otherwise 0.
	floor=0, % the picture starts at floor.
	font=\tiny, % size of font for labels (does it work?).
	height=\cmdstr@strands@height, % height of the strands.
	norma=\cmdstr@strands@norma, % point above to normalize height.
	normb=\cmdstr@strands@normb, % point below to normalize height.
	nstr=\cmdstr@strands@nstr, % number of dots.
	scale=\cmdstr@strands@scale, % positive number to scale the picture (do not work for labels).
	strwidth=\cmdstr@strands@strwidth, % set the width of the strands.
	type=2, % -1: labels below | 0: no labels | 1: labels above | 2: labels above-below | 3: labels signed.
	width=\cmdstr@strands@width % width between dots.
}{}

\newcommand{\permutation}[2][
	bulla=1,
	bullb=1,
	floor=0,
	font=\tiny,
	height=\cmdstr@strands@height,
	norma=\cmdstr@strands@norma,
	normb=\cmdstr@strands@normb,
	nstr=\cmdstr@strands@nstr,
	scale=\cmdstr@strands@scale,
	strwidth=\cmdstr@strands@strwidth,
	type=2,
	width=\cmdstr@strands@width
]{
	\setkeys[str]{perm}{#1}
	\ifnum\cmdstr@perm@type>2 \renewcommand{\cmdstr@perm@type}{5}\fi % renumerate type.
	\vpartition[
		bulla=\cmdstr@perm@bulla,
		bullb=\cmdstr@perm@bullb,
		floor=\cmdstr@perm@floor,
		font=\cmdstr@perm@font,
		height=\cmdstr@perm@height,
		norma=\cmdstr@perm@norma,
		normb=\cmdstr@perm@normb,
		nstr=\cmdstr@perm@nstr,
		permut=1, % permutation.
		scale=\cmdstr@perm@scale,
		strwidth=\cmdstr@perm@strwidth,
		type=\cmdstr@perm@type,
		width=\cmdstr@perm@width
	]{#2}
}

% \ttiedpair  - macro to draw a tied permutation as a pair (with tikz environment).

% Example: the permutation ({2,4},2134) of [4] is drawn as follows:

% \begin{tikzpicture} \tiedpair[<options>]{{2,4}}{2,1,3,4} \end{tikzpicture}

%      2       4
%      ---------
%  1   |   3   |
%  |   |   |   |
%   - -    |   |
%    -     |   |
%   - -    |   |
%  |   |   |   |
%  1   2   3   4

\makeatletter
\define@cmdkey[str]{ttpair}{above}{}
\define@cmdkey[str]{ttpair}{bending}{}
\define@cmdkey[str]{ttpair}{bulla}{}
\define@cmdkey[str]{ttpair}{bullb}{}
\define@cmdkey[str]{ttpair}{floor}{}
\define@cmdkey[str]{ttpair}{font}{}
\define@cmdkey[str]{ttpair}{height}{}
\define@cmdkey[str]{ttpair}{norma}{}
\define@cmdkey[str]{ttpair}{normb}{}
\define@cmdkey[str]{ttpair}{nstr}{}
\define@cmdkey[str]{ttpair}{strwidth}{}
\define@cmdkey[str]{ttpair}{type}{}
\define@cmdkey[str]{ttpair}{width}{}

\presetkeys[str]{ttpair}{
	above=1, % use 1 to put the ties above, otherwise 0.
	bending=\cmdstr@strands@bending, % use left or right to change the bending of tangles.
	bulla=1, % use 1 to draw bullets above, otherwise 0.
	bullb=1, % use 1 to draw bullets below, otherwise 0.
	floor=0, % the picture starts at floor.
	font=\tiny, % size of font for labels (does it work?).
	height=\cmdstr@strands@height, % height of the strands.
	norma=\cmdstr@strands@norma, % point above to normalize height.
	normb=\cmdstr@strands@normb, % point below to normalize height.
	nstr=\cmdstr@strands@nstr, % number of dots.
	strwidth=\cmdstr@strands@strwidth, % set the width of the strands.
	type=-1, % -1: labels below | 0: no labels | 1: labels above | 2: labels above-below | 3: labels signed.
	width=\cmdstr@strands@width % width between strands.
}{}

\newcommand{\ttiedpair}[3][
	above=1,
	bending=\cmdstr@strands@bending,
	bulla=1,
	bullb=1,
	floor=0,
	font=\tiny,
	height=\cmdstr@strands@height,
	norma=\cmdstr@strands@norma,
	normb=\cmdstr@strands@normb,
	nstr=\cmdstr@strands@nstr,
	strwidth=\cmdstr@strands@strwidth,
	type=-1,
	width=\cmdstr@strands@width
]{
	\setkeys[str]{ttpair}{#1}
	\ppermutation[
		bulla=\cmdstr@ttpair@bulla,
		bullb=\cmdstr@ttpair@bullb,
		floor=\cmdstr@ttpair@floor,
		font=\cmdstr@ttpair@font,
		height=\cmdstr@ttpair@height,
		norma=\cmdstr@ttpair@norma,
		normb=\cmdstr@ttpair@normb,
		nstr=\cmdstr@ttpair@nstr,
		strwidth=\cmdstr@ttpair@strwidth,
		type=\cmdstr@ttpair@type,
		width=\cmdstr@ttpair@width
	]{#2}
	\aarcpartition[
		bending=\cmdstr@ttpair@bending,
		bull=0, % no bullets.
		floor=\fpeval{\cmdstr@ttpair@floor+\cmdstr@ttpair@above*\cmdstr@ttpair@height},
		type=0, % no labels.
		strwidth=\cmdstr@ttpair@strwidth,
		width=\cmdstr@ttpair@width
	]{#3}
}

% \tiedpair  - macro to draw a tied permutation as a pair (with no tikz environment).

% Example: the permutation ({2,4},2134) of [4] is drawn as follows:

% \tiedpair[<options>]{{2,4}}{2,1,3,4}

%      2       4
%      ---------
%  1   |   3   |
%  |   |   |   |
%   - -    |   |
%    -     |   |
%   - -    |   |
%  |   |   |   |
%  1   2   3   4

\makeatletter
\define@cmdkey[str]{tpair}{above}{}
\define@cmdkey[str]{tpair}{bending}{}
\define@cmdkey[str]{tpair}{bulla}{}
\define@cmdkey[str]{tpair}{bullb}{}
\define@cmdkey[str]{tpair}{floor}{}
\define@cmdkey[str]{tpair}{font}{}
\define@cmdkey[str]{tpair}{height}{}
\define@cmdkey[str]{tpair}{norma}{}
\define@cmdkey[str]{tpair}{normb}{}
\define@cmdkey[str]{tpair}{nstr}{}
\define@cmdkey[str]{tpair}{scale}{}
\define@cmdkey[str]{tpair}{rotate}{}
\define@cmdkey[str]{tpair}{strwidth}{}
\define@cmdkey[str]{tpair}{type}{}
\define@cmdkey[str]{tpair}{width}{}

\presetkeys[str]{tpair}{
	above=1, % use 1 to put the ties above, otherwise 0.
	bending=\cmdstr@strands@bending, % use left or right to change the bending of tangles.
	bulla=1, % use 1 to draw bullets above, otherwise 0.
	bullb=1, % use 1 to draw bullets below, otherwise 0.
	floor=0, % the picture starts at floor.
	font=\tiny, % size of font for labels (does it work?).
	height=\cmdstr@strands@height, % height of the strands.
	norma=\cmdstr@strands@norma, % point above to normalize height.
	normb=\cmdstr@strands@normb, % point below to normalize height.
	nstr=\cmdstr@strands@nstr, % number of dots.
	rotate=\cmdstr@strands@rotate, % to rotate the picture.
	scale=\cmdstr@strands@scale, % positive number to scale the picture (do not work for labels).
	strwidth=\cmdstr@strands@strwidth, % set the width of the strands.
	type=-1, % -1: labels below | 0: no labels | 1: labels above | 2: labels above-below | 3: labels signed.
	width=\cmdstr@strands@width % width between strands.
}{}

\newcommand{\tiedpair}[3][
	above=1,
	bending=\cmdstr@strands@bending,
	bulla=1,
	bullb=1,
	floor=0,
	font=\tiny,
	height=\cmdstr@strands@height,
	norma=\cmdstr@strands@norma,
	normb=\cmdstr@strands@normb,
	nstr=\cmdstr@strands@nstr,
	rotate=\cmdstr@strands@rotate,
	scale=\cmdstr@strands@scale,
	strwidth=\cmdstr@strands@strwidth,
	type=-1,
	width=\cmdstr@strands@width
]{
	\setkeys[str]{tpair}{#1}
	\begin{tikzpicture}[
		rotate=\cmdstr@tpair@rotate,
		scale=\cmdstr@tpair@scale
	]
		\ttiedpair[
			above=\cmdstr@tpair@above,
			bending=\cmdstr@tpair@bending,
			bulla=\cmdstr@tpair@bulla,
			bullb=\cmdstr@tpair@bullb,
			floor=\cmdstr@tpair@floor,
			font=\cmdstr@tpair@font,
			height=\cmdstr@tpair@height,
			norma=\cmdstr@tpair@norma,
			normb=\cmdstr@tpair@normb,
			nstr=\cmdstr@tpair@nstr,
			strwidth=\cmdstr@tpair@strwidth,
			type=\cmdstr@tpair@type,
			width=\cmdstr@tpair@width
		]{#2}{#3}
	\end{tikzpicture}
}

% \ttie  - macro to draw a tie (with tikz environment).

% \begin{tikzpicture} \tie[height=1.5]{{1,0.8},{3,0.7},{4,0.8}} \end{tikzpicture}
% \begin{tikzpicture} \tie[height=1.5]{1,2,5} \end{tikzpicture}

\makeatletter
\define@cmdkey[str]{ttie}{bull}{}
\define@cmdkey[str]{ttie}{floor}{}
\define@cmdkey[str]{ttie}{height}{}
\define@cmdkey[str]{ttie}{tiebend}{}
\define@cmdkey[str]{ttie}{tiecolor}{}
\define@cmdkey[str]{ttie}{tieheight}{}
\define@cmdkey[str]{ttie}{tietype}{}
\define@cmdkey[str]{ttie}{tiewidth}{}
\define@cmdkey[str]{ttie}{width}{}

\presetkeys[str]{ttie}{
	bull=1, % use 1 to use bullets, 0 otherwise.
	floor=0, % the picture starts at floor*height.
	height=\cmdstr@strands@height, % height of the strands.
	tiebend=\cmdstr@strands@tiebend, % bending of the ties.
	tiecolor=\cmdstr@strands@tiecolor, % color of the ties.
	tieheight=\cmdstr@strands@tieheight, % height of the tie.
	tietype=\cmdstr@strands@tietype, % type of the tie (dashed, dotted, etc).
	tiewidth=\cmdstr@strands@tiewidth, % width of the tie line.
	width=\cmdstr@strands@width % width between strands.
}{}

\newcommand{\tie}[2][
	bull=1,
	floor=0,
	height=\cmdstr@strands@height,
	tiebend=\cmdstr@strands@tiebend,
	tiecolor=\cmdstr@strands@tiecolor,
	tieheight=\cmdstr@strands@tieheight,
	tietype=\cmdstr@strands@tietype,
	tiewidth=\cmdstr@strands@tiewidth,
	width=\cmdstr@strands@width,
]{
	\setkeys[str]{ttie}{#1}
	\foreach\elem[count=\ind]in{#2}{
		\StrRemoveBraces{\elem}[\nobrace]
		\getelem{\nobrace}{1}{\elemwidth} % get width of elem.
		\getelem{\nobrace}{2}{\elemheight} % get height of elem.
		\StrCount{\nobrace}{,}[\elemcoms]
		\ifnum\elemcoms=0 \renewcommand{\elemheight}{\cmdstr@ttie@tieheight}\fi % update height of elem.
		\ifnum \cmdstr@ttie@bull=1
			\filldraw[\cmdstr@ttie@tiecolor](\fpeval{(\elemwidth-1)*\cmdstr@ttie@width},
				\fpeval{\elemheight*\cmdstr@ttie@height+\cmdstr@ttie@floor*\cmdstr@ttie@height})
				circle(\cmdstr@strands@bulletsize);
		\fi
		\ifnum\ind>1
			\getelem{#2}{\fpeval{\ind-1}}{\prevelem}
			\StrRemoveBraces{\prevelem}[\prevnobrace]
			\getelem{\prevnobrace}{1}{\prevelemwidth}
			\getelem{\prevnobrace}{2}{\prevelemheight}
			\StrCount{\prevnobrace}{,}[\prevelemcoms]
			\ifnum\prevelemcoms=0 \renewcommand{\prevelemheight}{\cmdstr@ttie@tieheight}\fi
			\draw[
				\cmdstr@ttie@tiecolor,
				\cmdstr@ttie@tietype,
				line width=\cmdstr@ttie@tiewidth,
				bend right=\cmdstr@ttie@tiebend,
				%snake=snake,
				%segment amplitude=1,
				%segment length=5,
				%line after snake=0.5
			]
				(\fpeval{(\elemwidth-1)*\cmdstr@ttie@width},
				\fpeval{\elemheight*\cmdstr@ttie@height+\cmdstr@ttie@floor*\cmdstr@ttie@height})to
				(\fpeval{(\prevelemwidth-1)*\cmdstr@ttie@width},
				\fpeval{\prevelemheight*\cmdstr@ttie@height+\cmdstr@ttie@floor*\cmdstr@ttie@height});
		\fi
	}
}

% \ttiedpartition  - macro to draw a partition with ties (with tikz environment).

\newcommand{\ttiedpartition}[3][

]{
	\ppermutation{1,2,3,4,5}
	\tie{1,2,5}
}
